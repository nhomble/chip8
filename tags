!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
C8	example/Chip-8-Emulator/chip8.c	/^} C8;$/;"	t	typeref:struct:chip8	file:
CC	Makefile	/^CC=gcc$/;"	m
CHIP8_H	chip8.h	2;"	d
DEFAULT_ROM	ui.h	1;"	d
DRAW_DELAY	ui.h	2;"	d
E_DEPOP	chip8.h	26;"	d
E_END	chip8.h	24;"	d
E_LROM	chip8.h	27;"	d
E_NOFILE	chip8.h	28;"	d
E_WHATOP	chip8.h	25;"	d
FLAGS	Makefile	/^FLAGS=-O3 --pedantic -lncurses -Wall -Werror$/;"	m
FONT_H	font.h	2;"	d
FONT_SET_SIZE	font.h	4;"	d
H	example/Chip-8-Emulator/chip8.c	13;"	d	file:
I	chip8.h	/^	unsigned short I;					\/\/ index register$/;"	m	struct:chip8
I	example/Chip-8-Emulator/chip8.c	/^    unsigned short I;$/;"	m	struct:chip8	file:
I	ops.h	10;"	d
KEY_TIMEOUT	ui.h	3;"	d
KK	ops.c	/^unsigned char static inline KK(struct chip8 *cpu){$/;"	f	file:
LSB	ops.c	/^unsigned char static inline LSB(unsigned char reg){$/;"	f	file:
MEMORY_SIZE	chip8.h	4;"	d
MSB	ops.c	/^unsigned char static inline MSB(unsigned char reg){$/;"	f	file:
N	ops.c	/^unsigned char static inline N(struct chip8 *cpu){$/;"	f	file:
NNN	ops.c	/^unsigned short static inline NNN(struct chip8 *cpu){$/;"	f	file:
NUM_KEYS	chip8.h	17;"	d
OPS_H	ops.h	2;"	d
PC_START	chip8.h	19;"	d
PROGS	Makefile	/^PROGS=chocolate_chip test$/;"	m
REGISTERS_SIZE	chip8.h	5;"	d
REGISTER_MAX_VAL	ops.h	4;"	d
ROM_SIZE	chip8.h	8;"	d
ROM_START	chip8.h	9;"	d
SCREEN_BPP	example/Chip-8-Emulator/chip8.c	11;"	d	file:
SCREEN_H	example/Chip-8-Emulator/chip8.c	10;"	d	file:
SCREEN_LENGTH	chip8.h	12;"	d
SCREEN_W	example/Chip-8-Emulator/chip8.c	9;"	d	file:
SCREEN_WIDTH	chip8.h	11;"	d
SPRITE_HEIGHT	chip8.h	14;"	d
SPRITE_WIDTH	chip8.h	15;"	d
STACK_SIZE	chip8.h	6;"	d
V	chip8.h	/^	unsigned char V[REGISTERS_SIZE];			\/\/ registers$/;"	m	struct:chip8
V	example/Chip-8-Emulator/chip8.c	/^    unsigned char V[0x10];$/;"	m	struct:chip8	file:
V0	ops.h	8;"	d
Vf	ops.h	9;"	d
Vx	ops.h	6;"	d
Vy	ops.h	7;"	d
W	example/Chip-8-Emulator/chip8.c	12;"	d	file:
add_i_vx	ops.c	/^void add_i_vx(struct chip8 *cpu){$/;"	f
add_vx_byte	ops.c	/^void add_vx_byte(struct chip8 *cpu){$/;"	f
add_vx_vy	ops.c	/^void add_vx_vy(struct chip8 *cpu){$/;"	f
and_vx_vy	ops.c	/^void and_vx_vy(struct chip8 *cpu){$/;"	f
call_addr	ops.c	/^void call_addr(struct chip8 *cpu){$/;"	f
chip8	chip8.h	/^struct chip8{$/;"	s
chip8	example/Chip-8-Emulator/chip8.c	/^typedef struct chip8{$/;"	s	file:
chip8_draw	example/Chip-8-Emulator/chip8.c	/^void chip8_draw(C8 * CH8){$/;"	f
chip8_execute	example/Chip-8-Emulator/chip8.c	/^void chip8_execute(C8 * CH8){$/;"	f
chip8_fontset	example/Chip-8-Emulator/chip8.c	/^unsigned char chip8_fontset[80] =$/;"	v
chip8_initialize	example/Chip-8-Emulator/chip8.c	/^void chip8_initialize(C8 * CH8, char * name){$/;"	f
chip8_prec	example/Chip-8-Emulator/chip8.c	/^void chip8_prec(char * name, SDL_Event * event){$/;"	f
chip8_prepare	example/Chip-8-Emulator/chip8.c	/^void chip8_prepare(char * name){$/;"	f
chip8_start	example/Chip-8-Emulator/chip8.c	/^void chip8_start(){$/;"	f
chip8_timers	example/Chip-8-Emulator/chip8.c	/^void chip8_timers(C8 * CH8){$/;"	f
clear_graphics	chip8.c	/^inline void clear_graphics(struct chip8* cpu){$/;"	f
clear_keys	chip8.c	/^inline void clear_keys(struct chip8 *cpu){$/;"	f
clear_registers	chip8.c	/^inline void clear_registers(struct chip8 *cpu){$/;"	f
cls	ops.c	/^void cls(struct chip8 *cpu){$/;"	f
create_win	ui.c	/^WINDOW* create_win(int height, int width){$/;"	f
delay_timer	chip8.h	/^	unsigned char delay_timer;$/;"	m	struct:chip8
delay_timer	example/Chip-8-Emulator/chip8.c	/^    unsigned char delay_timer;$/;"	m	struct:chip8	file:
destroy_window	ui.c	/^void destroy_window(WINDOW *win){$/;"	f
do_cycle	chip8.c	/^void do_cycle(struct chip8 *cpu){$/;"	f
do_sound_timer	chip8.c	/^static inline void do_sound_timer(struct chip8 *cpu){$/;"	f	file:
draw	ui.c	/^void draw(WINDOW *win, struct chip8 *chip8){$/;"	f
drw_vx_vy_nibble	ops.c	/^void drw_vx_vy_nibble(struct chip8 *cpu){$/;"	f
dump	chip8.c	/^void dump(struct chip8 *cpu){$/;"	f
end	run.c	/^void end(int status){$/;"	f
error	chip8.h	/^	int error;$/;"	m	struct:chip8
execute_opcode	chip8.c	/^static inline void execute_opcode(struct chip8* cpu){$/;"	f	file:
false	chip8.h	22;"	d
fetch_opcode	chip8.c	/^static inline void fetch_opcode(struct chip8 *cpu){$/;"	f	file:
font_set	font.h	/^const unsigned char font_set[FONT_SET_SIZE] = {$/;"	v
game	example/Chip-8-Emulator/chip8.c	/^    FILE * game;$/;"	m	struct:chip8	file:
get_keys	chip8.c	/^inline void get_keys(struct chip8 *cpu){$/;"	f
gfx	chip8.h	/^	unsigned char gfx[SCREEN_LENGTH][SCREEN_WIDTH];		\/\/ graphics (ncurses)$/;"	m	struct:chip8
graphics	example/Chip-8-Emulator/chip8.c	/^    unsigned char graphics[64 * 32];$/;"	m	struct:chip8	file:
handle_pixel	ui.c	/^static inline void handle_pixel(WINDOW *win, unsigned int x, unsigned int y){$/;"	f	file:
init_chip	chip8.c	/^void init_chip(struct chip8 *cpu){$/;"	f
init_screen	ui.c	/^void init_screen(){$/;"	f
jp_addr	ops.c	/^void jp_addr(struct chip8 *cpu){$/;"	f
jp_v0_addr	ops.c	/^void jp_v0_addr(struct chip8 *cpu){$/;"	f
key	example/Chip-8-Emulator/chip8.c	/^    unsigned char key[0x10];$/;"	m	struct:chip8	file:
keymap	example/Chip-8-Emulator/chip8.c	/^static int keymap[0x10] = {$/;"	v	file:
keys	chip8.h	/^	unsigned char keys[NUM_KEYS];				\/\/ boolean, is it pressed$/;"	m	struct:chip8
last	chip8.c	/^struct chip8* last;$/;"	v	typeref:struct:chip8
ld_b_vx	ops.c	/^void ld_b_vx(struct chip8 *cpu){$/;"	f
ld_dt_vx	ops.c	/^void ld_dt_vx(struct chip8 *cpu){$/;"	f
ld_f_vx	ops.c	/^void ld_f_vx(struct chip8 *cpu){$/;"	f
ld_i_addr	ops.c	/^void ld_i_addr(struct chip8 *cpu){$/;"	f
ld_i_vx	ops.c	/^void ld_i_vx(struct chip8 *cpu){$/;"	f
ld_st_vx	ops.c	/^void ld_st_vx(struct chip8 *cpu){$/;"	f
ld_vx_byte	ops.c	/^void ld_vx_byte(struct chip8 *cpu){$/;"	f
ld_vx_dt	ops.c	/^void ld_vx_dt(struct chip8 *cpu){$/;"	f
ld_vx_i	ops.c	/^void ld_vx_i(struct chip8 *cpu){$/;"	f
ld_vx_k	ops.c	/^void ld_vx_k(struct chip8 *cpu){$/;"	f
ld_vx_vy	ops.c	/^void ld_vx_vy(struct chip8 *cpu){$/;"	f
load_fontset	chip8.c	/^inline void load_fontset(struct chip8 *cpu){$/;"	f
load_rom	chip8.c	/^void load_rom(struct chip8 *cpu, char *rom_path){$/;"	f
main	example/Chip-8-Emulator/chip8.c	/^int main(){$/;"	f
main	example/Chip-8-Emulator/chip8.c	6;"	d	file:
main	run.c	/^int main(int argc, char **argv){$/;"	f
main	test_ops.c	/^int main(void){$/;"	f
memory	chip8.h	/^	unsigned char memory[MEMORY_SIZE];$/;"	m	struct:chip8
memory	example/Chip-8-Emulator/chip8.c	/^    unsigned char memory[memsize];$/;"	m	struct:chip8	file:
memsize	example/Chip-8-Emulator/chip8.c	8;"	d	file:
opcode	chip8.h	/^	unsigned short opcode;$/;"	m	struct:chip8
opcode	example/Chip-8-Emulator/chip8.c	/^    unsigned short opcode;$/;"	m	struct:chip8	file:
or_vx_vy	ops.c	/^void or_vx_vy(struct chip8 *cpu){$/;"	f
pc	chip8.h	/^	unsigned short pc;					\/\/ program counter$/;"	m	struct:chip8
pc	example/Chip-8-Emulator/chip8.c	/^    unsigned short pc;$/;"	m	struct:chip8	file:
pc_step	ops.c	/^void static inline pc_step(struct chip8 *cpu){$/;"	f	file:
rand_seeded	chip8.h	/^	unsigned char rand_seeded;$/;"	m	struct:chip8
ret	ops.c	/^void ret(struct chip8 *cpu){$/;"	f
rnd_vx_byte	ops.c	/^void rnd_vx_byte(struct chip8 *cpu){$/;"	f
se_vx_byte	ops.c	/^void se_vx_byte(struct chip8 *cpu){$/;"	f
se_vx_vy	ops.c	/^void se_vx_vy(struct chip8 *cpu){$/;"	f
shl_vx	ops.c	/^void shl_vx(struct chip8 *cpu){$/;"	f
should_draw	chip8.h	/^	unsigned char should_draw;$/;"	m	struct:chip8
shr_vx	ops.c	/^void shr_vx(struct chip8 *cpu){$/;"	f
sknp_vx	ops.c	/^void sknp_vx(struct chip8 *cpu){$/;"	f
skp_vx	ops.c	/^void skp_vx(struct chip8 *cpu){$/;"	f
sne_vx	ops.c	/^void sne_vx(struct chip8 *cpu){$/;"	f
sne_vx_byte	ops.c	/^void sne_vx_byte(struct chip8 *cpu){$/;"	f
sound_timer	chip8.h	/^	unsigned char sound_timer;$/;"	m	struct:chip8
sound_timer	example/Chip-8-Emulator/chip8.c	/^    unsigned char sound_timer;$/;"	m	struct:chip8	file:
sp	chip8.h	/^	unsigned short sp;					\/\/ stack pointer$/;"	m	struct:chip8
sp	example/Chip-8-Emulator/chip8.c	/^    unsigned short sp;$/;"	m	struct:chip8	file:
stack	chip8.h	/^	unsigned short stack[STACK_SIZE];$/;"	m	struct:chip8
stack	example/Chip-8-Emulator/chip8.c	/^    unsigned short stack[0x10];$/;"	m	struct:chip8	file:
stack_pop	ops.c	/^void static inline stack_pop(struct chip8 *cpu){$/;"	f	file:
stack_push	ops.c	/^void static inline stack_push(struct chip8 *cpu){$/;"	f	file:
sub_vx_vy	ops.c	/^void sub_vx_vy(struct chip8 *cpu){$/;"	f
subn_vx_vy	ops.c	/^void subn_vx_vy(struct chip8 *cpu){$/;"	f
sys_addr	ops.c	/^void sys_addr(struct chip8 *cpu){$/;"	f
test_add_vx_byte	test_ops.c	/^static void test_add_vx_byte(){$/;"	f	file:
test_add_vx_vy	test_ops.c	/^static void test_add_vx_vy(){$/;"	f	file:
test_and_vx_vy	test_ops.c	/^static void test_and_vx_vy(){$/;"	f	file:
test_call_addr	test_ops.c	/^static void test_call_addr(){$/;"	f	file:
test_clc	test_ops.c	/^static void test_clc(){$/;"	f	file:
test_jp_addr	test_ops.c	/^static void test_jp_addr(){$/;"	f	file:
test_jp_v0_addr	test_ops.c	/^static void test_jp_v0_addr(){$/;"	f	file:
test_ld_i_addr	test_ops.c	/^static void test_ld_i_addr(){$/;"	f	file:
test_ld_vx_byte	test_ops.c	/^static void test_ld_vx_byte(){$/;"	f	file:
test_ld_vx_vy	test_ops.c	/^static void test_ld_vx_vy(){$/;"	f	file:
test_or_vx_vy	test_ops.c	/^static void test_or_vx_vy(){$/;"	f	file:
test_ret	test_ops.c	/^static void test_ret(){$/;"	f	file:
test_rnd_vx_byte	test_ops.c	/^static void test_rnd_vx_byte(){$/;"	f	file:
test_se_vx_byte	test_ops.c	/^static void test_se_vx_byte(){$/;"	f	file:
test_se_vx_vy	test_ops.c	/^static void test_se_vx_vy(){$/;"	f	file:
test_shl_vx	test_ops.c	/^static void test_shl_vx(){$/;"	f	file:
test_shr_vx	test_ops.c	/^static void test_shr_vx(){$/;"	f	file:
test_sne_vx	test_ops.c	/^static void test_sne_vx(){$/;"	f	file:
test_sne_vx_byte	test_ops.c	/^static void test_sne_vx_byte(){$/;"	f	file:
test_sub_vx_vy	test_ops.c	/^static void test_sub_vx_vy(){$/;"	f	file:
test_subn_vx_vy	test_ops.c	/^static void test_subn_vx_vy(){$/;"	f	file:
test_xor_vx_vy	test_ops.c	/^static void test_xor_vx_vy(){$/;"	f	file:
true	chip8.h	21;"	d
update_timers	chip8.c	/^static inline void update_timers(struct chip8 *cpu){$/;"	f	file:
usage	run.c	/^static void usage(char *prog){$/;"	f	file:
xor_vx_vy	ops.c	/^void xor_vx_vy(struct chip8 *cpu){$/;"	f
